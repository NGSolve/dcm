Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/nbclient/client.py", line 780, in _async_poll_for_reply
    msg = await ensure_async(self.kc.shell_channel.get_msg(timeout=new_timeout))
  File "/usr/local/lib/python3.10/dist-packages/nbclient/util.py", line 97, in ensure_async
    result = await obj
  File "/usr/local/lib/python3.10/dist-packages/jupyter_client/channels.py", line 230, in get_msg
    raise Empty
_queue.Empty

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/mwess/.local/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/usr/local/lib/python3.10/dist-packages/nbclient/client.py", line 1269, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/local/lib/python3.10/dist-packages/nbclient/util.py", line 85, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/usr/local/lib/python3.10/dist-packages/nbclient/util.py", line 60, in just_run
    return loop.run_until_complete(coro)
  File "/usr/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/usr/local/lib/python3.10/dist-packages/nbclient/client.py", line 707, in async_execute
    await self.async_execute_cell(
  File "/usr/local/lib/python3.10/dist-packages/nbclient/client.py", line 1006, in async_execute_cell
    exec_reply = await self.task_poll_for_reply
  File "/usr/local/lib/python3.10/dist-packages/nbclient/client.py", line 804, in _async_poll_for_reply
    error_on_timeout_execute_reply = await self._async_handle_timeout(timeout, cell)
  File "/usr/local/lib/python3.10/dist-packages/nbclient/client.py", line 856, in _async_handle_timeout
    raise CellTimeoutError.error_from_timeout_and_cell(
nbclient.exceptions.CellTimeoutError: A cell timed out while it was being executed, after 100 seconds.
The message was: Cell execution timed out.
Here is a preview of the cell contents:
-------------------
['from time import time', '', 'startnow = time()', 'now = time()', '']
...
['            gfp_history.AddMultiDimComponent(gfu.components[0].vec)', '            drawtime += time()-drawnow', '', 'computetime = time()-startnow-drawtime', 'dofss = fes.ndof*i/computetime']
-------------------

